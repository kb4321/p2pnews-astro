---
import Layout from '~/layouts/PageLayout.astro';
import SocialShare from '~/components/common/SocialShare.astro';
import { Icon } from 'astro-icon';
import { Picture } from 'astro:assets';
import DateUtil from '~/components/DateUtil.vue';

// import PostTags from '~/components/blog/Tags.astro';

const slug = Astro.params.slug;
// console.log(slug, source);

// if slug or source is missing redirect
if ( !slug ) {
  return Astro.redirect('/404');
}
// quotes?author=like.*??*"
const response = await fetch(`https://jisfqytmimlowxlmwebg.supabase.co/rest/v1/articles?slug=eq.${slug}`, {
  headers: {
    apikey:
      'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imppc2ZxeXRtaW1sb3d4bG13ZWJnIiwicm9sZSI6ImFub24iLCJpYXQiOjE2ODU1NjM4MjAsImV4cCI6MjAwMTEzOTgyMH0.mY3oqMAJDu9Fc9OrzIzhZQkILHxP9lc_lUnf-Q8Jh6s',
  },
});

const result = await response.json();
// console.log(result);

if (result.length === 0) {
  return Astro.redirect('/404');
}

const title = result[0].title;
const imageUrl = result[0].image_url;
const tags = result[0].category;
const summary = result[0].summary;
const url = result[0].url;
const article_markdown = result[0].markdown;
const publishedAt = result[0].created_at;
var youtube_url = result[0].video_url;
var embeddable_youtube_url = '';
// console.log(source_name);
// Currently storing the default youtube share link that youtube gives you, the video Id is split and converted into a youtube embeddable link so it can be embedded. Will fix later.
if(youtube_url){
    const parsedUrl = new URL(youtube_url);

    // Get the path part of the URL
    const path = parsedUrl.pathname + parsedUrl.search;
    const youtube_base = "https://www.youtube.com/embed";
    youtube_url = youtube_base + path;
}
if (youtube_url.includes("shorts/")) {
  //Fixes youtube link if it has the 'shorts/' within link
  //youtube.com/shorts/FKF43DF wil not embed a video properly
  //youtube.com/embed/FKF43DF   is link needed to embed
    // Replace "page/" with an empty string
    youtube_url = youtube_url.replace("shorts/", "");
}
const photoUrls = [
        
      'https://images.unsplash.com/photo-1556157382-97eda2d62296?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D.jpg',
      'https://images.unsplash.com/photo-1607990281513-2c110a25bd8c?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8NDh8fGF1dGhvcnxlbnwwfHwwfHx8MA%3D%3D.jpg',
      'https://images.unsplash.com/photo-1627673081968-c1f6204b0a14?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&.jpg',
      'https://images.unsplash.com/photo-1627673081968-c1f6204b0a14?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxjb2xsZWN0aW9uLXBhZ2V8MXw4cUhrX1BURy1CNHx8ZW58MHx8fHx8.jpg',
      'https://images.unsplash.com/photo-1548810020-ea2f1da35cff?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxjb2xsZWN0aW9uLXBhZ2V8MTB8OHFIa19QVEctQjR8fGVufDB8fHx8fA%3D%3D.jpg',
      // Add more photo URLs as needed
    ];
    const authors = [
      'Daniel B.',
      'Alex C.',
      'Chris K.',
      'Jimmy G.',
    ];

    // Function to get a random index from the array
    function getRandomIndex(array) {
      return Math.floor(Math.random() * array.length);
    }

    function getRandomIndex2(array) {
      return Math.floor(Math.random() * array.length);
    }
    // Get a random photo URL
    const randomPhotoUrl = photoUrls[getRandomIndex(photoUrls)];
    const randomAuthor = authors[getRandomIndex2(authors)];


const meta = {
  title: title,
  summary: summary,
  image: imageUrl,
};
---

<Layout {meta}>
  <div class="container max-w-3xl mx-auto mt-10 mb-10">

    <div class="text-sm mt-10 mb-10">
      <div class="w-full text-center">
        <a class="uppercase" href="#">Advertisement</a><a href="#"
          ><img
            class="mx-auto"
            src="https://image.jimcdn.com/app/cms/image/transf/none/path/sc300b455628a248f/image/i1152e4768a907603/version/1528457462/binance-krypto-trading-sign-up.png"
          /></a>
      </div>
    </div>

    <div class="flex-row px-4 bg-slate-50 dark:bg-slate-800 rounded-md max-w-4xl mx-auto">
  <h1 class="font-bold p-4 font-heading text-4xl md:text-5xl leading-tighter tracking-tighter my-4">{title}<h1>
  
  <div class="flex items-center justify-center">
   {youtube_url ? <iframe width="560" height="315" src={youtube_url} frameborder="0" allowfullscreen></iframe> : <iframe width="560" height="315" src="https://youtube.com/embed/Y32CtXmdgFE?si=Znb7Wa1mKzv5yb69" frameborder="0" allowfullscreen></iframe> }
  </div>
  
  <SocialShare url={url} text={title} class="pt-4 align-left text-gray-500 dark:text-slate-600" />

  <div class="flex mb-2">
    <div class="flex items-center py-2">
      <img class="mb2 rounded-full" src={randomPhotoUrl} height="32" width="32" />
      <p class="pl-2 text-sm italic">By:</p>
      <p class="p-2 pr-2 text-sm italic">{randomAuthor}</p>
      <h5 class="text-sm font-semibold tracking-tight text-gray-900 dark:text-white line-clamp-">
        <span>&#x2013;</span>
        <DateUtil publishedAt={publishedAt} />
      </h5>
    </div>
  </div>
</div>


    <div
      class="mx-auto prose rounded-md dark:bg-slate-800 bg-slate-50 prose-lg max-w-4xl dark:prose-invert dark:prose-headings:text-slate-300 prose-md prose-headings:font-heading prose-headings:leading-tighter prose-headings:tracking-tighter prose-headings:font-bold prose-a:text-blue-600 dark:prose-a:text-blue-400 prose-img:rounded-md prose-img:shadow-lg mt-4 p-4"
    >
    <h8 class="italic text-sm text-gray-500 dark:text-slate-600">Quick Summary</h8>
    <p class='font-semibold'>{summary}</>
      <Fragment set:html={article_markdown} />

    </div>



  </div>
</Layout>
